schema {
  query: Query
  subscription: Subscription
}
type Subscription {
  """
  A Policy Exception notification
  """
  policyException: PolicyException
}
type Query {
  """
  List of Topic Filters
  """
  mqttTopicFilterQuery: MqttTopicFilterResponse
  """
  List of Policy Exceptions
  """
  mqttPolicyExceptionQuery: MqttPolicyExceptionResponse
}
type MqttTopicFilterResponse {
  status: ResponseStatus
  topicFilters: [TopicFilter]
}
type MqttPolicyExceptionResponse {
  status: ResponseStatus
  policyExceptions: [PolicyException]
}
type ResponseStatus {
  code: ResponseCode
  message: String
}
enum ResponseCode
{
  Success
  FailureNotFound
  FailureNotUnique
  FailureGeneral
}
enum MutationOperation
{
  Create
  Update
  Delete
}
type TopicFilter {
  """
  Unique ID generated for filter
  """
  id: ID!
  """
  The source IP address of the MQTT subsribe or publish
  """
  srcIP: String!
  """
  The topic of the MQTT subscribe or publish
  """
  topic: String!
  """
  Is the srcIp allowed to subscribe to this topic?
  """
  allowSub: Boolean!
  """
  Is the srcIP allowed to publish to this topic?
  """
  allowPub: Boolean!
  """
  Maximum publication rate (messages per second) for the srcIp to this topic
  """
  pubRate: Int!
}
type PolicyException {
  """
  Unique ID generted for exception
  """
  id: ID!
  """
  Timestamp of exception
  """
  timestamp: String!
  """
  The source IP address of the exception
  """
  srcIP: String!
  """
  The topic of the exception
  """
  topic: String!
  """
  The type of exception
  """
  mqttType: MQTTType!
}
enum MQTTType {
  Publish
  Subscribe
}